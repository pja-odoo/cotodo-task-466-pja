// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id       String    @id
    name     String
    email    String    @unique
    avatar   String?
    sessions Session[]
    accounts Account[]

    assignedSubTasks SubTask[] @relation("assignedSubTasks")
    createdSubTasks  SubTask[] @relation("createdSubTasks")
    createdTasks     Task[]    @relation("createdTasks")

    createdAt DateTime @default(now())
}

model Session {
    id        String   @id
    expiresAt DateTime

    user   User   @relation(references: [id], fields: [userId], onDelete: Cascade)
    userId String

    providerId String

    createdAt DateTime @default(now())
}

model Account {
    providerUserId String @unique
    providerId     String @unique

    user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId String

    createdAt DateTime @default(now())
}

model Workspace {
    id String @id

    name String

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    tasks Task[]
}

model Task {
    id String @id

    title       String
    description String?
    priority    Priority @default(MEDIUM)

    workspace   Workspace @relation(fields: [workspaceId], references: [id])
    workspaceId String

    subTasks SubTask[]

    createdBy   User   @relation("createdTasks", fields: [createdById], references: [id])
    createdById String

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model SubTask {
    id String @id

    name     String
    done     Boolean  @default(false)
    priority Priority @default(MEDIUM)

    task   Task   @relation(fields: [taskId], references: [id])
    taskId String

    assignee   User   @relation("assignedSubTasks", fields: [assigneeId], references: [id])
    assigneeId String

    createdBy   User   @relation("createdSubTasks", fields: [createdById], references: [id])
    createdById String

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

enum Priority {
    HIGH
    MEDIUM
    LOW
}

// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id       String    @id
    name     String
    email    String    @unique
    avatar   String?
    sessions Session[]
    accounts Account[]

    createdTasks     Task[]            @relation("createdTasks")
    assignedTasks    Task[]            @relation("assignedTasks")
    ownedWorkspaces  Workspace[]       @relation("ownedWorkspaces")
    sharedWorkspaces SharedWorkspace[]

    createdAt DateTime @default(now())
}

model Session {
    id        String   @id
    expiresAt DateTime

    user   User   @relation(references: [id], fields: [userId], onDelete: Cascade)
    userId String

    providerId String

    createdAt DateTime @default(now())
}

model Account {
    providerUserId String @unique
    providerId     String @unique

    user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId String

    createdAt DateTime @default(now())
}

model Workspace {
    id String @id @default(cuid())

    name String

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    owner   User   @relation("ownedWorkspaces", fields: [ownerId], references: [id])
    ownerId String

    sharedWorkspaces SharedWorkspace[]

    tasks Task[]
}

model SharedWorkspace {
    id String @id @default(cuid())

    workspace   Workspace @relation(fields: [workspaceId], references: [id])
    workspaceId String

    canEdit Boolean @default(false)

    user   User   @relation(fields: [userId], references: [id])
    userId String
}

model Task {
    id String @id @default(cuid())

    title       String
    description String?
    priority    Priority  @default(MEDIUM)
    done        Boolean   @default(false)
    dueDate     DateTime?

    workspace   Workspace @relation(fields: [workspaceId], references: [id])
    workspaceId String

    assignedUsers User[] @relation("assignedTasks")

    createdBy   User   @relation("createdTasks", fields: [createdById], references: [id])
    createdById String

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

enum Priority {
    HIGH
    MEDIUM
    LOW
}
